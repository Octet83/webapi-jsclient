/**
 * Tripartie Web API
 * This document describes all use cases offered by the Tripartie Web API.<br /><br /> The Tripartie Web API allows you to easily create Transaction templates.<br /> Those templates allows a User (the Buyer) to quickly initiate a Transaction pre-configured by another User (the Seller).<br /> This allows you to add a Secured Payment button on your website pages.<br /> To facilitate working with the Web API, we built libraries for common developpement environment.<br/><br/> You're reading the documentation for version 1.0 of the Web API.<br/> Go to version <select id=\"version-switcher\"></select> 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@tripartie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TripartieWebAPI);
  }
}(this, function(expect, TripartieWebAPI) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TripartieWebAPI.ModelTransactionTemplate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelTransactionTemplate', function() {
    it('should create an instance of ModelTransactionTemplate', function() {
      // uncomment below and update the code to test ModelTransactionTemplate
      //var instane = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be.a(TripartieWebAPI.ModelTransactionTemplate);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property permalink (base name: "permalink")', function() {
      // uncomment below and update the code to test the property permalink
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "externalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property sellerExternalId (base name: "sellerExternalId")', function() {
      // uncomment below and update the code to test the property sellerExternalId
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property sellerTripartieId (base name: "sellerTripartieId")', function() {
      // uncomment below and update the code to test the property sellerTripartieId
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property subTotal (base name: "subTotal")', function() {
      // uncomment below and update the code to test the property subTotal
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property flow (base name: "flow")', function() {
      // uncomment below and update the code to test the property flow
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property buyerFees (base name: "buyerFees")', function() {
      // uncomment below and update the code to test the property buyerFees
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property buyerTotal (base name: "buyerTotal")', function() {
      // uncomment below and update the code to test the property buyerTotal
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property sellerFees (base name: "sellerFees")', function() {
      // uncomment below and update the code to test the property sellerFees
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property sellerTotal (base name: "sellerTotal")', function() {
      // uncomment below and update the code to test the property sellerTotal
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property adUrl (base name: "adUrl")', function() {
      // uncomment below and update the code to test the property adUrl
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property allowPriceChange (base name: "allowPriceChange")', function() {
      // uncomment below and update the code to test the property allowPriceChange
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

    it('should have the property hasPicture (base name: "hasPicture")', function() {
      // uncomment below and update the code to test the property hasPicture
      //var instance = new TripartieWebAPI.ModelTransactionTemplate();
      //expect(instance).to.be();
    });

  });

}));
