/**
 * Tripartie Web API
 * This document describes all use cases offered by the Tripartie Web API.<br /><br /> The Tripartie Web API allows you to easily create Transaction templates.<br /> A Transaction template allows a User (the Buyer) to safely initiate a Transaction pre-configured by another User (the Seller).<br /> This allows you to add a Secured Payment button on your website pages.<br /><br /> To facilitate working with the Web API, we built libraries for common development environment:<br/> <ul class=\"bullet\">   <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/tripartie/webapi-jsclient\">Javascript</a></li> </ul> <br/> You're reading the documentation for version 1.0 of the Web API.<br/> Go to version <select id=\"version-switcher\"></select> 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@tripartie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Webhook model module.
 * @module model/Webhook
 * @version 1.0
 */
class Webhook {
    /**
     * Constructs a new <code>Webhook</code>.
     * @alias module:model/Webhook
     */
    constructor() { 
        
        Webhook.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Webhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Webhook} obj Optional instance to populate.
     * @return {module:model/Webhook} The populated <code>Webhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Webhook();

            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('eventType')) {
                obj['eventType'] = ApiClient.convertToType(data['eventType'], 'String');
            }
            if (data.hasOwnProperty('transactionTemplateExternalId')) {
                obj['transactionTemplateExternalId'] = ApiClient.convertToType(data['transactionTemplateExternalId'], 'String');
            }
            if (data.hasOwnProperty('transactionTemplateTripartieId')) {
                obj['transactionTemplateTripartieId'] = ApiClient.convertToType(data['transactionTemplateTripartieId'], 'Number');
            }
            if (data.hasOwnProperty('buyerExternalId')) {
                obj['buyerExternalId'] = ApiClient.convertToType(data['buyerExternalId'], 'String');
            }
            if (data.hasOwnProperty('buyerTripartieId')) {
                obj['buyerTripartieId'] = ApiClient.convertToType(data['buyerTripartieId'], 'Number');
            }
            if (data.hasOwnProperty('eventTimestamp')) {
                obj['eventTimestamp'] = ApiClient.convertToType(data['eventTimestamp'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The Webhook UUID.
 * @member {String} uuid
 */
Webhook.prototype['uuid'] = undefined;

/**
 * The webhook type.
 * @member {module:model/Webhook.EventTypeEnum} eventType
 */
Webhook.prototype['eventType'] = undefined;

/**
 * The Transaction template's External ID.
 * @member {String} transactionTemplateExternalId
 */
Webhook.prototype['transactionTemplateExternalId'] = undefined;

/**
 * The Transaction template's Tripartie ID.
 * @member {Number} transactionTemplateTripartieId
 */
Webhook.prototype['transactionTemplateTripartieId'] = undefined;

/**
 * The Buyer's External ID.
 * @member {String} buyerExternalId
 */
Webhook.prototype['buyerExternalId'] = undefined;

/**
 * The Buyer's Tripartie ID.
 * @member {Number} buyerTripartieId
 */
Webhook.prototype['buyerTripartieId'] = undefined;

/**
 * The event timestamp.
 * @member {Number} eventTimestamp
 */
Webhook.prototype['eventTimestamp'] = undefined;





/**
 * Allowed values for the <code>eventType</code> property.
 * @enum {String}
 * @readonly
 */
Webhook['EventTypeEnum'] = {

    /**
     * value: "proposition_sent"
     * @const
     */
    "proposition_sent": "proposition_sent",

    /**
     * value: "proposition_accepted"
     * @const
     */
    "proposition_accepted": "proposition_accepted",

    /**
     * value: "proposition_rejected"
     * @const
     */
    "proposition_rejected": "proposition_rejected",

    /**
     * value: "transaction_completed"
     * @const
     */
    "transaction_completed": "transaction_completed",

    /**
     * value: "transaction_canceled"
     * @const
     */
    "transaction_canceled": "transaction_canceled"
};



export default Webhook;

