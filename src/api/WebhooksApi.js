/**
 * Tripartie Web API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@tripartie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import ModelWebhook from '../model/ModelWebhook';

/**
* Webhooks service.
* @module api/WebhooksApi
* @version 1.0
*/
export default class WebhooksApi {

    /**
    * Constructs a new WebhooksApi. 
    * @alias module:api/WebhooksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Validate
     * Check a webhook's authenticity 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.eventType The webhook type.
     * @param {String} opts.transactionTemplateExternalId The Transaction template's External ID.
     * @param {Number} opts.transactionTemplateTripartieId The Transaction template's Tripartie ID.
     * @param {Number} opts.eventTimestamp The event timestamp.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ModelWebhook} and HTTP response
     */
    validateWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'event-type': opts['eventType'],
        'transaction-template-external-id': opts['transactionTemplateExternalId'],
        'transaction-template-tripartie-id': opts['transactionTemplateTripartieId'],
        'event-timestamp': opts['eventTimestamp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ClientIdAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelWebhook;
      return this.apiClient.callApi(
        '/api/web/webhooks/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Validate
     * Check a webhook's authenticity 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.eventType The webhook type.
     * @param {String} opts.transactionTemplateExternalId The Transaction template's External ID.
     * @param {Number} opts.transactionTemplateTripartieId The Transaction template's Tripartie ID.
     * @param {Number} opts.eventTimestamp The event timestamp.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ModelWebhook}
     */
    validate(opts) {
      return this.validateWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
}
